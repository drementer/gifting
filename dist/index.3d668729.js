const log=t=>{console.log(t)},addClass=(t,r)=>{t.classList.add(r)},removeClass=(t,r)=>{t.classList.remove(r)},select=(t,r=document)=>r.querySelector(t),selects=(t,r=document)=>r.querySelectorAll(t),wrapper=select("[wrapper]"),startButton=select("[start-button]"),slidingClass="--sliding",winnerClass="--winner",cardWidth=10,perScrollCard=30,perScroll=300,halfCardWidth="calc(10rem / 2)",scrollStart=`(50vw - ${halfCardWidth})`;let scrollWidth=300,scrolledCard=30,transform="",scrollPosition=`translateX(calc(${scrollStart} - ${scrollWidth}rem))`;const updateScrollPosition=()=>{scrollPosition=`translateX(calc(${scrollStart} - ${scrollWidth}rem))`,transform=`${scrollPosition}`,wrapper.style.transform=transform},createCard=t=>{let r=document.createElement("div");return r.classList.add("slider__card","slider-card"),r.setAttribute("card",""),r.innerHTML=`<img src="assets/img/cards/${t}.png" alt="" class="slider-card__image">`,r},injectCard=()=>{let t=1;for(;t<=31;){let r=Math.floor(6*Math.random())+1,e=createCard(r);wrapper.insertAdjacentElement("beforeend",e),t++}},startAnimation=()=>{startButton.innerHTML="Tekrar Dene",startButton.setAttribute("disabled","");let t=select(".--winner");t&&removeClass(t,"--winner"),injectCard(),scrollPosition=`translateX(calc(${scrollStart} - ${scrollWidth}rem))`,transform=`${scrollPosition}`,wrapper.style.transform=transform,addClass(wrapper,"--sliding"),scrollWidth+=300},finishAnimation=t=>{if(t.srcElement!=wrapper)return;let r=selects("[card]")[scrolledCard];addClass(r,"--winner"),removeClass(wrapper,"--sliding"),startButton.removeAttribute("disabled"),scrolledCard+=30},init=()=>{startButton.addEventListener("click",startAnimation),wrapper.addEventListener("transitionend",finishAnimation),injectCard()};window.onload=(startButton.addEventListener("click",startAnimation),wrapper.addEventListener("transitionend",finishAnimation),void injectCard());